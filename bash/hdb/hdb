#!/usr/bin/env bash
set -euo pipefail

die() {
	echo "$@" >&2
	exit 1
}

usage() {
	die "Usage: $0 <db path> $runCmd $1"
}

validatePath() {
	# shellcheck disable=SC2001
	sed "s|^/*||" <<< "$1"
}

cmd_get() {
	(($# < 1)) && usage "<path>"
	path="$(validatePath "$1")"

	if [ -d "$path" ]; then
		echo "$path is a directory with entries: "
		find "$path" -mindepth 1 -maxdepth 1
		exit 1
	else
		cat "$path"
	fi
}

cmd_set() {
	(($# < 2)) && usage "<path> <mode: f or d>"
	path="$(validatePath "$1")"

	case "$2" in
		f) cat - > "$path" ;;
		d) mkdir "$path" ;;
		*) die "Unknown mode $2" ;;
	esac
}

cmd_update() {
	(($# < 2)) && usage "<path> <command> [args]"
	path="$(validatePath "$1")"
	cmd="$2"
	shift 2

	[ -d "$path" ] && die "$path is a directory!"
	new_file="$(mktemp)"
	trap 'rm -f "$new_file"' EXIT
	"$cmd" "$@" < "$path" > "$new_file"
	mv "$new_file" "$path"
}

cmd_del() {
	(($# < 1)) && usage "<path>"
	path="$(validatePath "$1")"

	if [ -d "$path" ]; then
		rm -rf "$path"
	else
		rm "$path"
	fi
}

listCmds() {
	# get all functions starting with cmd_
	declare -F | grep -o "cmd_.*" | sed "s|cmd_||"
}

main() {
	if (($# < 2)); then
		echo "Usage: $0 <db> <command>"
		echo "Available commands: "
		listCmds
		exit 1
	else
		cd "$1"
		runCmd="$2"
		shift 2
		"cmd_$runCmd" "$@"
	fi
}

main "$@"
