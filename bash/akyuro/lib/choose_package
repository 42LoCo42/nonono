#!/usr/bin/env bash

declare packages

colorize_repo_name() {
	printf "[1m"
	case "$1" in
		core|system)      printf "[38;5;3m";;
		extra|world)      printf "[38;5;2m";;
		community|galaxy) printf "[38;5;5m";;
		multilib|lib32)   printf "[38;5;6m";;
		*)                printf "[38;5;4m";;
	esac
	echo -n "$1[m"
}

display_package() {
	local data
	IFS="$SEPARATOR" read -r -d '' -a data <<< "$1"

	# check if orphaned
	if [ "${data[4]}" == "null" ]; then
		data[4]="[38;5;1m (Orphaned)"
	else
		data[4]=""
	fi

	# check if out of date
	if [ "${data[5]}" != "null" ]; then
		data[5]="$(
			echo -ne "[38;5;1m (Out of date: "
			date --date="@${data[5]}" +%F | tr -d '\n'
			echo -ne ")"
		)"
	else
		data[5]=""
	fi

	LC_NUMERIC="C" printf "\
%s/[1m${data[0]}\
[m[38;5;6m ${data[1]}\
[m[1m (${data[2]} ${data[3]})\
${data[4]}${data[5]}
[m    ${data[6]}\n" "$(colorize_repo_name "${data[7]}")"
}

choose_package() {
	[ "${#packages[@]}" == 0 ] && die "No packages found!"

	for ((i = "${#packages[@]}" - 1; i >= 0; i--)); do
		echo -ne "[38;5;5m$((i + 1))[m "
		display_package "${packages[i]}"
	done

	while
		[ -z "$package_ix" ] ||
		is_no_number "$package_ix" ||
		((package_ix <= 0)) ||
		((package_ix - 1 >= "${#packages[@]}")); do
		echo "[1m[38;5;2m==>[m Package to install:"
		read -r -p "[1m[38;5;2m==>[m " package_ix || return
	done
	((package_ix = package_ix - 1))
	package_name="$(echo "${packages[package_ix]}" | awk -F "$SEPARATOR" '{print $1}')"
	package_vers="$(echo "${packages[package_ix]}" | awk -F "$SEPARATOR" '{print $2}')"
	package_repo="$(echo "${packages[package_ix]}" | awk -F "$SEPARATOR" '{print $8}')"
	if [ "$package_repo" == "aur" ]; then
		download_aur_package "$package_name"
	else
		download_arch_package "$package_name" "$package_vers" "$package_repo"
	fi
}
